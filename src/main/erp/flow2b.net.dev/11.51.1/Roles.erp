extend entity User {
  ref field ownedBacklogs: [Backlog]? {
    views = []
    visible = is(ProductOwner)
  }
  extend view form = extend {
    ownedBacklogs
    developingBacklogs
  }
  ref field developingBacklogs: [Backlog]? {
    views = []
    visible = is(Developer) || is(Tech)
  }
}

role Developer {
  entity Bug = readWrite
  entity UserStory = readWrite
  entity DevTask = readWrite
  entity TechTask = readWrite
  entity Incident = readWrite
  entity Roadmap = readOnly
  entity Backlog = readOnly
  entity Feature = readWrite  
  entity Milestone = readOnly  
  entity UniversalApp = readOnly  
  entity PersonalProject = readOnly  
  entity Article = readWrite
  entity QrTemplate = readOnly
  entity Questionnaire = readOnly
  impl view menu = y{
    menu("Development") {
      Issue >> item(fastSearch, fastAdd)
      Article >> item(fastSearch)
      DocPackage >> item("Docs")
      DocType >> item("Data Types")
    }
    menu("Core") {
      button("Released to Test", icon = "vial") {
        DevIssue.all
        .filter(isCore && status.implemented && core == NotReleased)
        .update(core = TestServer).result
      }
      button("Released to Prod", icon = "check-circle") {
        DevIssue.all
        .filter(isCore && status.implemented && core != Prod)
        .update(core = Prod).result
      }
    }
  }
}
   
role ProductOwner {
  entity Bug = readWrite
  entity UserStory = readWrite
  entity DevTask = readWrite
  entity TechTask = readWrite
  entity Incident = readWrite
  entity Feature = readWrite  
  entity Milestone = readWrite
  entity UniversalApp = readWrite  
  entity PersonalProject = readWrite 
  entity Roadmap = readWrite
  entity Backlog = readWrite
  entity Article = readWrite
  entity QrTemplate = readWrite
  entity Questionnaire = readWrite
  impl view menu = y {
    menu("Development") {
      Issue >> item(fastSearch, fastAdd)
      Article >> item(fastSearch)
      DevProduct >> item("Products")
      ProductRole >> item("Roles")
      DocPackage >> item("Docs")
      Backlog
      Roadmap
    }
    menu("Onboarding") {
      Questionnaire >> item(fastAdd)
      QrTemplate
    }
  }
}


extend role Public {
  entity ProductRole = readOnly
  entity File = readWrite
  extend view menu = menu("Development") {
    PersonalProject
  }
  extend view dashboard = PersonalProject.all >> nav(label = "Projects") { list (canAdd = false){grid(labels = None) {
    title
  }}}
}

role Stakeholder {
  entity Bug = readOnly
  entity UserStory = readOnly
  entity DevTask = readOnly
  entity TechTask = readOnly
  entity Incident = readOnly
  entity Roadmap = readOnly
  entity Backlog = readOnly
  entity Feature = readOnly  
  entity Milestone = readOnly  
  entity UniversalApp = readOnly  
  entity PersonalProject = readOnly  
  entity Article = readOnly
  impl view menu = menu("Development") {
    Issue >> item(fastSearch, fastAdd)
    Article >> item(fastSearch)
    Backlog
    Roadmap
  } 
}

role Partner {
  entity Bug = readWrite
  entity UserStory = readWrite
  entity DevTask = readOnly
  entity TechTask = readWrite
  entity Incident = readWrite
  entity Roadmap = readOnly
  entity Backlog = readOnly
  entity Feature = readWrite  
  entity Milestone = readOnly  
  entity UniversalApp = readOnly  
  entity PersonalProject = readOnly  
  entity Article = readOnly
  entity Questionnaire = readWrite
  entity QrTemplate = readOnly
  entity QueRspBlockItem = readWrite
  impl view menu = menu("Development") {
    Issue >> item(fastSearch, fastAdd)
    Article >> item(fastSearch)
    Questionnaire >> item(fastAdd)
    Backlog
    Roadmap
  } 
}

role QA {
  entity Bug = readWrite
  entity UserStory = readWrite
  entity DevTask = readWrite
  entity TechTask = readWrite
  entity Incident = readWrite
  entity Roadmap = readOnly
  entity Backlog = readOnly
  entity Feature = readWrite  
  entity Milestone = readOnly  
  entity UniversalApp = readOnly  
  entity PersonalProject = readOnly  
  entity Article = readWrite
  entity QrTemplate = readOnly
  
  impl view menu = menu("Development") {
    Issue >> item(fastSearch, fastAdd)
    Article >> item(fastSearch)
    Backlog
    Roadmap
  } 
}

role Tech {
  entity Bug = readWrite
  entity UserStory = readWrite
  entity DevTask = readWrite
  entity TechTask = readWrite
  entity Incident = readWrite
  entity Roadmap = readOnly
  entity Backlog = readOnly
  entity Feature = readWrite  
  entity Milestone = readOnly  
  entity UniversalApp = readOnly  
  entity PersonalProject = readOnly  
  entity Article = readWrite
  entity QrTemplate = readOnly
  entity Questionnaire = readOnly
  
  impl view menu = menu("Tech") {
    Issue >> item(fastSearch, fastAdd)
    TechTask
    Article >> item(fastSearch)
  } 
}

role Support {
  entity Bug = readWrite
  entity UserStory = readWrite
  entity DevTask = readWrite
  entity TechTask = readWrite
  entity Incident = readWrite
  entity Roadmap = readOnly
  entity Backlog = readOnly
  entity Feature = readWrite  
  entity Milestone = readOnly  
  entity UniversalApp = readOnly  
  entity PersonalProject = readOnly  
  entity Article = readWrite
  entity QrTemplate = readOnly
  entity Questionnaire = readWrite
  
  impl view menu = y {
    menu("Support") {
      Issue >> item(fastSearch, fastAdd)
      Incident
      Article >> item(fastSearch)
      SupportUnitReg  
    } 
    menu("Bulk Messaging") {
      SupportBulkMsg >> item(fastAdd)
    } 
    menu("Onboarding") {
      Questionnaire >> item(fastAdd)
    }
  }
}

role Doc {
  entity Bug = readWrite
  entity UserStory = readWrite
  entity DevTask = readWrite
  entity TechTask = readWrite
  entity Incident = readWrite
  entity Roadmap = readOnly
  entity Backlog = readOnly
  entity Feature = readWrite  
  entity Milestone = readOnly  
  entity UniversalApp = readOnly  
  entity PersonalProject = readOnly  
  entity Article = readWrite
  entity QrTemplate = readOnly
  entity Questionnaire = readWrite
  
  impl view menu = y {
    menu("Bulk Messaging") {
      SupportBulkMsg >> item(fastAdd)
    } 
    menu("Development") {
      Issue >> item(fastSearch, fastAdd)
    } 
  }
}

extend role Salesperson {
  entity Bug = readWrite
  entity UserStory = readWrite
  entity DevTask = readWrite
  entity TechTask = readWrite
  entity Incident = readWrite
  entity Roadmap = readOnly
  entity Backlog = readOnly
  entity Feature = readWrite  
  entity Milestone = readOnly  
  entity UniversalApp = readOnly  
  entity PersonalProject = readOnly  
  entity Article = readWrite
  entity QrTemplate = readOnly
  entity Questionnaire = readWrite
  
  extend view menu = menu("Onboarding") {
    Questionnaire >> item(fastAdd)
  }
}

extend entity Dashboard {
  extend override func sender = ContactSenderJoin
}
